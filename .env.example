# ApyHub Environment Variables
# ============================================
# Copy this file to .env and fill in your values
# IMPORTANT: Never commit the .env file to git!
# ============================================

# ======================================
# ENVIRONMENT MODE
# ======================================
# Set to 'development' for local dev or 'production' for deployment
NODE_ENV=production

# ======================================
# Database Configuration
# ======================================
POSTGRES_DB=apyhub
POSTGRES_USER=apyhub
POSTGRES_PASSWORD=your_secure_password_here_change_this

# Port Configuration:
# - Development: Use 5433 to avoid conflicts with local PostgreSQL
# - Production/Docker: Use 5432 (standard PostgreSQL port)
POSTGRES_PORT=5433

# Database URL for Prisma
# Development (local PostgreSQL on custom port):
DATABASE_URL="postgresql://apyhub:your_secure_password_here_change_this@localhost:5433/apyhub?schema=public"

# Production with Docker (uncomment when deploying):
# DATABASE_URL="postgresql://apyhub:your_secure_password_here_change_this@postgres:5432/apyhub?schema=public"

# ======================================
# Backend Configuration
# ======================================
# Express server port (internal)
PORT=3003

# Port exposed by Docker/host (can be different from PORT)
# Development: 3003, Production: 3001
BACKEND_PORT=3003

# Blockchain RPC (Get your own key from Alchemy or Infura)
# Example: https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
RPC_URL=https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_KEY

# CORS Origins (comma-separated)
# Development: http://localhost:3000,http://localhost:3002
# Production: https://apyhub.xyz,https://www.apyhub.xyz
CORS_ORIGIN=https://apyhub.xyz,https://www.apyhub.xyz

# ======================================
# AI APIs (Optional - for chatbot features)
# ======================================
# OpenAI API - Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-YOUR_OPENAI_API_KEY

# Anthropic API - Get your key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-YOUR_ANTHROPIC_API_KEY

# ======================================
# Cache & Performance
# ======================================
CACHE_TTL=60
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging (debug, info, warn, error)
LOG_LEVEL=info

# ======================================
# Envio / Blockchain Indexing
# ======================================
# Required for fetching user positions
# Get your keys from: https://envio.dev
ENVIO_API_KEY=your_envio_api_key
ENVIO_HYPERSYNC_API_KEY=your_envio_hypersync_key_optional
ENVIO_NETWORK_ID=1
ENVIO_HYPERINDEX_URL=https://api.envio.dev/hyperindex

# ======================================
# Redis Cache
# ======================================
# Used for Envio response caching and performance optimization
# Development: redis://localhost:6379
# Production/Docker: redis://redis:6379
REDIS_URL=redis://localhost:6379
REDIS_PORT=6379
REDIS_HOST=localhost

# ======================================
# Frontend Configuration
# ======================================
# Port for Next.js dev server / production build
FRONTEND_PORT=3002

# API URLs - Frontend needs NEXT_PUBLIC_* prefix to expose to browser
# Development (direct backend connection):
# NEXT_PUBLIC_API_URL=http://localhost:3001/api
# NEXT_PUBLIC_WS_URL=ws://localhost:3001

# Production (through Nginx reverse proxy - recommended):
NEXT_PUBLIC_API_URL=/api
NEXT_PUBLIC_WS_URL=/ws

# WalletConnect Project ID
# Get from: https://cloud.walletconnect.com/
NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# ======================================
# Nginx Configuration (Production Only)
# ======================================
# HTTP and HTTPS port bindings for Nginx reverse proxy
# Development: Not needed (access services directly)
# Production: Set to 80 and 443 for standard web ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
